version: "3.9"

services:
  db:
    image: postgres:16
    # container_name: city-mobility-routes-db   # (optional)
    environment:
      POSTGRES_USER: routes
      POSTGRES_PASSWORD: routes
      POSTGRES_DB: routesdb
    ports:
      - "5432:5432"        # exposes app DB to your host
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: unless-stopped

  jenkins:
    image: jenkins/jenkins:lts-jdk21
    # container_name: jenkins                   # (optional)
    ports:
      - "8081:8080"         # Jenkins UI
      - "50000:50000"       # inbound agents
    volumes:
      - jenkins_home:/var/jenkins_home
    environment:
      JAVA_OPTS: "-Djenkins.install.runSetupWizard=true"
    restart: unless-stopped

  sonarqube:
    image: sonarqube:community
    # container_name: sonarqube                 # (optional)
    depends_on:
      - sonar-db
    ports:
      - "9000:9000"         # SonarQube UI
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonar-db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonar_data:/opt/sonarqube/data
      - sonar_extensions:/opt/sonarqube/extensions
      - sonar_logs:/opt/sonarqube/logs
    restart: unless-stopped

  sonar-db:
    image: postgres:16
    # container_name: sonarqube-db              # (optional)
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - sonar_db:/var/lib/postgresql/data
    # no host port mapping needed
    restart: unless-stopped

volumes:
  db-data:
  jenkins_home:
  sonar_data:
  sonar_extensions:
  sonar_logs:
  sonar_db:
